openapi: 3.0.1
info:
  title: swagger-petstore
  description: 'This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).     we For this sample, you can use the api key `special-key` to test the authorization     filters.'
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: v1
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
servers:
  - url: 'https://localhost:8243/petstore/v2'
security:
  - default: []
tags:
  - name: pet
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: store
    description: Access to Petstore orders
  - name: user
    description: Operations about user
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
paths:
  /v2/pet/findByStatus:
    get:
      tags:
        - pet
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated trings
      operationId: findPetsByStatus
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              default: available
              enum:
                - available
                - pending
                - sold
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
              examples:
                '200':
                  value:
                    - id: 1000000000000000000
                      category:
                        id: 1
                        name: pet dog
                      name: Lucky
                      photoUrls:
                        - string
                      tags:
                        - id: 1
                          name: string
                      status: pending
                    - id: 1000000000000000000
                      category:
                        id: 1
                        name: pet dog
                      name: Rockey_Updated
                      photoUrls:
                        - string
                      tags:
                        - id: 1
                          name: string
                      status: pending
                    - id: 778
                      category:
                        id: 2
                        name: Dog
                      name: Icarus
                      photoUrls:
                        - 'https://upload.wikimedia.org/wikipedia/en/thumb/f/fd/Droopy_dog.png/150px-Droopy_dog.png'
                      tags:
                        - id: 1001
                          name: kitty
                      status: pending
                    - id: 313
                      category:
                        id: 2
                        name: Dog
                      name: Бобик
                      photoUrls:
                        - 'https://upload.wikimedia.org/wikipedia/en/thumb/f/fd/Droopy_dog.png/150px-Droopy_dog.png'
                      tags:
                        - id: 1001
                          name: Песик
                      status: pending
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
        '401':
          description: Invalid status value
          content:
            application/json:
              schema:
                type: object
                properties: {}
      security:
        - bearerAuth: []
        - default:
            - 'resource:reader'
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-wso2-application-security:
        security-types:
          - oauth2
        optional: false
components:
  schemas:
    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          maximum: 1000000000000000000
          minimum: 1
          type: integer
          format: int64
        category:
          $ref: '#/components/schemas/Category'
        name:
          type: string
          example: doggie
        photoUrls:
          type: array
          xml:
            name: photoUrl
            wrapped: true
          items:
            type: string
        tags:
          type: array
          xml:
            name: tag
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: Pet
    Tag:
      type: object
      properties:
        id:
          maximum: 1000000000000000000
          minimum: 1
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Tag
    Category:
      type: object
      properties:
        id:
          maximum: 1000000000000000000
          minimum: 1
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Category
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JW
    default:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: ''
          scopes:
            'resource:reader': Internal/reader
          x-scopes-bindings:
            'resource:reader': Internal/reader
        password:
          tokenUrl: 'https://localhost:8243/token'
          scopes: {}
x-wso2-auth-header: Authorization
x-wso2-cors:
  corsConfigurationEnabled: false
  accessControlAllowOrigins:
    - '*'
  accessControlAllowCredentials: false
  accessControlAllowHeaders:
    - authorization
    - Access-Control-Allow-Origin
    - Content-Type
    - SOAPAction
    - apikey
    - testKey
  accessControlAllowMethods:
    - GET
    - PUT
    - POST
    - DELETE
    - PATCH
    - OPTIONS
x-wso2-production-endpoints:
  urls:
    - 'https://petstore.swagger.io'
  type: http
x-wso2-sandbox-endpoints:
  urls:
    - 'https://petstore.swagger.io/'
  type: http
x-wso2-basePath: /petstore/v2
x-wso2-transports:
  - http
  - https
x-wso2-response-cache:
  enabled: false
  cacheTimeoutInSeconds: 300
